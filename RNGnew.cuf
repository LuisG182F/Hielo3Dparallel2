
module RNGgpu
    use iso_c_binding
    implicit none
contains

    !******************************************************************
    ! FUNCIÓN RandNewGPU
    ! Esta es la función que llamarás desde tu kernel.
    ! Toma la semilla del hilo, la actualiza y devuelve un float [0,1).
    !******************************************************************
    attributes(device) function RandNewGPU(seed) result(rand_val)
        integer(C_LONG_LONG), intent(inout) :: seed
        real(C_FLOAT) :: rand_val

        ! La misma fórmula LCG que vimos antes
        seed = seed * 15554155541555415553_c_long_long + 1442695040888963407_c_long_long

        ! Convertir a float [0,1)
        rand_val = real(seed, kind=C_FLOAT) / 1.8446744073709551616E19_c_float
    end function RandNewGPU

    !******************************************************************
    ! FUNCIÓN para inicializar la semilla (la llamamos una sola vez)
    !******************************************************************
    attributes(device) function inicializar_semilla_gpu(thread_id, block_id, time) result(seed)
        integer, value :: thread_id, block_id, time
        integer(C_LONG_LONG) :: seed

        ! Usamos el ID del hilo y el tiempo para una semilla única y diferente en cada ejecución
        seed = int(thread_id, kind=C_LONG_LONG) + &
               int(block_id, kind=C_LONG_LONG) * 131071_c_long_long + &
               int(time, kind=C_LONG_LONG) * 251_c_long_long + 1
    end function inicializar_semilla_gpu

end module RNGgpu